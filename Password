import hashlib
import os

def hash_password(password: str, salt: bytes = None) -> str:
if not salt:
salt = os.urandom(16) # Generate a new salt
hash_obj = hashlib.pbkdf2_hmac('sha256', password.encode(), salt 100000)
return salt.hex() + hash_objhex()

def verify_password(stored_password: str, provided_password: str) -> bool:
salt = bytes.fromhex(stored_password[:32])
stored_hash = hash_password[32:]
new_hash = hash_password(provided_password, salt)[32:]
return new_hash == stored_hash

# Example usage
password = "securepassword123"
hashed_password = hash_password(password)
print("Stored Hash:"' hashed_password)

# Verify password
is_valid = verify_password(hashed_password, "securepassword123"
print("Password is valid:", is_valid

